library("readxl")
library("SNPassoc")
library(dplyr)
# xls files
my_data <- read_excel("./data/data_Ali.xlsx")
setwd("code")
library("readxl")
library("SNPassoc")
library(dplyr)
# xls files
my_data <- read_excel("./data/data_Ali.xlsx")
data(my_data, package = "SNPassoc")
idx <- grep("^rs", colnames(my_data))
my_data.s <- setupSNP(data=my_data, colSNPs=idx, sep="")
ans <- WGassociation(Status, data=my_data.s[1:500])
View(ans)
View(ans)
ans <- WGassociation(Status, data=my_data.s[1:500])
nrow(my_data.s)
my_data.s[1:500]
my_data.s[1:5]
my_data.s[5:10]
ans <- WGassociation(Status, data=my_data.s[100:500])
my_data.s[5:10]
my_data.s[2]
cbind(my_data.s[2],my_data.s[5:10])
ans <- WGassociation(Status, data=my_data.s[100:500])
ans <- WGassociation(Status, data=my_data.s[1:500])
ans2 <- WGassociation(Status, data=cbind(my_data.s[2],my_data.s[500:ncol(my_data)]))
cbind(my_data.s[2],my_data.s[5:10])
my_data.s[, c(1, 3, 4:100)]
ans <- WGassociation(Status, data=my_data.s[, c(2, 4:100)])
my_data.s[, c(1, 3, 4:100)]
ans <- WGassociation(Status, data=my_data.s[, c(2, 4:100)])
ans
ans <- WGassociation(Status, data=my_data.s[, c(1:500)])
ans2 <- WGassociation(Status, data=my_data.s[, c(2, 500:ncol(my_data))])
ans <- rbind(ans, ans1)
ans <- rbind(ans, ans2)
ans
print(dim(ans))
library("readxl")
library("SNPassoc")
library(dplyr)
# xls files
my_data <- read_excel("./data/data_Ali.xlsx")
library("readxl")
library("SNPassoc")
library(dplyr)
setwd("code")
# xls files
my_data <- read_excel("./data/data_Ali.xlsx")
# renv.packages('IRkernel')
# renv::install("IRkernel")
# renv::activate()
# my_data
data(my_data, package = "SNPassoc")
# str(my_data, list.len=9)
idx <- grep("^rs", colnames(my_data))
my_data.s <- setupSNP(data=my_data, colSNPs=idx, sep="")
# d <- summary(my_data.s, print=FALSE)
# write.csv(d, "./data/R_stat.csv", row.names=TRUE)
# # plotMissing(my_data.s, print.labels.SNPs = FALSE)
# hwe <- tableHWE(my_data.s)
# # hwe
# hwe2 <- tableHWE(my_data.s, Status)
# # hwe2
# write.csv(hwe2, "./data/hwe.csv", row.names=TRUE)
# snpNHWE <- hwe2[,1]>0.05 & hwe2[,2]<0.05
# rownames(hwe2)[snpNHWE]
# hwe2[snpNHWE,]
# snps.ok <- rownames(hwe2)[hwe2[,1]>=0.01]
# pos <- which(colnames(my_data)%in%snps.ok, useNames = FALSE)
# my_data.s <- setupSNP(my_data, pos, sep="")
# association(Status ~ rs225131, data = my_data.s)
ans <- WGassociation(Status, data=my_data.s[, c(1:500)])
ans2 <- WGassociation(Status, data=my_data.s[, c(2, 500:ncol(my_data))])
ans <- rbind(ans, ans2)
print(dim(ans))
plot(ans)
# ans
write.csv(ans[order(ans$codominant), ], "./data/R_stat_p.csv", row.names=TRUE)
ans <- ans[order(ans$codominant), ]
ans <- ans[ans$codominant < 0.05, ]
ans
library("readxl")
library("SNPassoc")
library(dplyr)
data_path <- "./data/data_Ali.xlsx"
p_vals <- "./data/R_stat_p.csv"
conf_file_path <- './data/confidence.txt'
setwd("code")
library("readxl")
library("SNPassoc")
library(dplyr)
data_path <- "./data/data_Ali.xlsx"
p_vals <- "./data/R_stat_p.csv"
conf_file_path <- './data/confidence.txt'
setwd("~/projects/manhattan_pca/code")
# xls files
my_data <- read_excel(data_path)
# renv.packages('IRkernel')
# renv::install("IRkernel")
# renv::activate()
# my_data
data(my_data, package = "SNPassoc")
# str(my_data, list.len=9)
idx <- grep("^rs", colnames(my_data))
my_data.s <- setupSNP(data=my_data, colSNPs=idx, sep="")
# d <- summary(my_data.s, print=FALSE)
# write.csv(d, "./data/R_stat.csv", row.names=TRUE)
# # plotMissing(my_data.s, print.labels.SNPs = FALSE)
# hwe <- tableHWE(my_data.s)
# # hwe
# hwe2 <- tableHWE(my_data.s, Status)
# # hwe2
# write.csv(hwe2, "./data/hwe.csv", row.names=TRUE)
# snpNHWE <- hwe2[,1]>0.05 & hwe2[,2]<0.05
# rownames(hwe2)[snpNHWE]
# hwe2[snpNHWE,]
# snps.ok <- rownames(hwe2)[hwe2[,1]>=0.01]
# pos <- which(colnames(my_data)%in%snps.ok, useNames = FALSE)
# my_data.s <- setupSNP(my_data, pos, sep="")
# association(Status ~ rs225131, data = my_data.s)
ans1 <- WGassociation(Status, data=my_data.s[, c(1:500)])
ans2 <- WGassociation(Status, data=my_data.s[, c(2, 500:ncol(my_data))])
ans <- rbind(ans1, ans2)
View(ans)
View(ans)
write.csv(ans[order(ans$codominant), ], p_vals, row.names=TRUE)
ans <- ans[order(ans$codominant), ]
View(ans)
View(ans)
ans
ans <- rbind(ans1, ans2)
ans
is.na(ans)
sum(is.na(ans))
sum(is.na(ans$codominant))
ans[complete.cases(ans$codominant), ]
ans
dim(ans)
dim(ans[complete.cases(ans$codominant), ])
ans %>% drop_na(codominant)
library(tidyr)
ans %>% drop_na(codominant)
ans %>% drop_na(codominant)
dim(ans)
dim(ans %>% drop_na(codominant))
res <- ans %>% drop_na(codominant)
View(res)
ans %>% drop_na(codominant)
ans %>% drop_na(dominant)
ans[!is.na(ans$dominant),]
ans[!is.na(ans$codominant),]
dim(ans[!is.na(ans$codominant),])
dim(ans[!is.na(ans$codominant),])
ans[order(ans$codominant), ]
ans[order(ans$codominant)]
library("data.table")
df2 <- setorder(df,price)
setorder(ans,dominant)
View(ans)
View(ans)
setorder(ans,codominant)
ans <- ans[!is.na(ans$codominant),]
setorder(ans,codominant)
write.csv(ans[order(ans$codominant), ], p_vals, row.names=TRUE)
View(ans)
View(ans)
ans <- rbind(ans1, ans2)
ans <- ans[!is.na(ans$codominant),]
setorder(ans,codominant)
ans <- rbind(ans1, ans2)
ans[!is.na(ans$codominant),]
ans_ <- ans[!is.na(ans$codominant),]
View(ans_)
View(ans_)
setorder(ans_,codominant)
View(ans_)
View(ans_)
ans_ <- ans[!is.na(ans$codominant),]
ans_
setorder(ans_,codominant)
ans_
View(ans_)
View(ans_)
ans <- rbind(ans1, ans2)
dim(ans)
ans_ <- ans[!is.na(ans$codominant),]
dim(ans_)
setorder(ans_,codominant)
dim(ans_)
ans_ <- ans[!is.na(ans$codominant),]
write.csv(ans_[order(ans$codominant), ], p_vals, row.names=TRUE)
write.csv(ans_, p_vals, row.names=TRUE)
write.csv(ans, p_vals, row.names=TRUE)
ans_ <- ans[!is.na(ans$codominant),]
write.csv(ans_, p_vals, row.names=TRUE)
ans_ <- ans[complete.cases(ans$codominant),]
View(ans_)
View(ans_)
write.csv(ans, p_vals, row.names=TRUE)
complete.cases(ans$codominant)
ans[complete.cases(ans$codominant),]
r = ans[complete.cases(ans$codominant),]
View(r)
View(r)
View(ans)
View(ans)
ans[order(ans$codominant), ]
ans1[order(ans1$codominant), ]
r = ans1[order(ans1$codominant), ]
View(r)
View(r)
r = ans2[order(ans2$codominant), ]
ans <- rbind(ans1, ans2)
r = ans[order(ans$codominant), ]
View(r)
View(r)
bind_rows(ans1, ans2)
r = bind_rows(ans1, ans2)
View(r)
View(r)
r = r[order(r$codominant), ]
r = bind_rows(ans1, ans2)
r[order(r$codominant), ]
ans <- rbind(ans1, ans2)
ans$codominant <- as.numeric(as.character(ans$codominant))
ans[order(ans$codominant), ]
ans <- rbind(ans1, ans2)
clear
cat()
cat("\014")
ans
cat("\014")
View(ans)
View(ans)
ans2 <- WGassociation(Status, data=my_data.s[, c(2, 500:ncol(my_data))])
View(ans2)
View(ans2)
View(ans2)
View(ans2)
View(ans2)
library("readxl")
library("SNPassoc")
library(dplyr)
library("data.table")
data_path <- "./data/data_Ali.xlsx"
p_vals <- "./data/R_stat_p.csv"
conf_file_path <- './data/confidence.txt'
setwd("~/projects/manhattan_pca/code")
# xls files
my_data <- read_excel(data_path)
# renv.packages('IRkernel')
# renv::install("IRkernel")
# renv::activate()
# my_data
data(my_data, package = "SNPassoc")
idx <- grep("^rs", colnames(my_data))
my_data.s <- setupSNP(data=my_data, colSNPs=idx, sep="")
ans1 <- WGassociation(Status, data=my_data.s[, c(1:500)])
ans2 <- WGassociation(Status, data=my_data.s[, c(2, 500:ncol(my_data))])
ans <- rbind(ans1, ans2)
View(ans2)
View(ans2)
View(ans)
View(ans)
View(ans)
View(ans)
unique(rbind(ans1, ans2))
a <- unique(rbind(ans1, ans2))
write.csv(ans1, "./data/ans1.csv", row.names=TRUE)
write.csv(ans2, "./data/ans2.csv", row.names=TRUE)
merge(ans1, ans2)
merge(ans1, ans2)z <- do.call(rbind, list(x = x, x = y))
z <- do.call(rbind, list(x = ans1, x = ans2))
View(z)
View(z)
ans1 <- read.csv("code/ans1.csv")
ans1 <- read.csv("data/ans1.csv")
View(ans1)
View(ans1)
ans2 <- read.csv("data/ans2.csv")
rbind(ans1, ans2)
an <- rbind(ans1, ans2)
View(an)
View(an)
an <- data.frame(an[, -1], row.names = an[, 1])
ans2 <- read.csv("data/ans2.csv")
an <- rbind(ans1, ans2)
an <- data.frame(an[, -1], row.names = an[, 1])
a <- an[!is.na(an$codominant),]
View(a)
View(a)
write.csv(a, "data/test.csv", row.names=TRUE)
a[order(a$codominant), ]
data_with_index_as_col <- data %>%
tibble::rownames_to_column(var = "Index")
a
d <- a %>%
tibble::rownames_to_column(var = "Index")
d
a <- a %>%
tibble::rownames_to_column(var = "Index")
a
a <- a %>%
tibble::rownames_to_column(var = "Index")
a
ans1 <- WGassociation(Status, data=my_data.s[, c(1:500)]) %>% tibble::rownames_to_column(var = "Index")
ans1 <- WGassociation(Status, data=my_data.s[, c(1:500)]) %>% tibble::rownames_to_column(var = "Index")
ans
ans1
ans1 <- WGassociation(Status, data=my_data.s[, c(1:500)])
View(ans1)
View(ans1)
ans <- ans%>% tibble::rownames_to_column(var = "Index")
a <- ans1%>% tibble::rownames_to_column(var = "Index")
View(a)
View(a)
View(ans1)
View(ans1)
a1 <- ans1%>% tibble::rownames_to_column(var = "Index")
ans1
ans1%>% tibble::rownames_to_column(var = "Index")
View(ans1)
View(ans1)
as.data.frame(ans1)%>% tibble::rownames_to_column(var = "Index")
ans1 <- WGassociation(Status, data=my_data.s[, c(1:500)])
ans2 <- WGassociation(Status, data=my_data.s[, c(2, 501:ncol(my_data))])
as.data.frame(ans1)%>% tibble::rownames_to_column(var = "Index")
rbind(as.data.frame(ans1), as.data.frame(ans2))
a <- rbind(as.data.frame(ans1), as.data.frame(ans2))
View(an)
View(an)
View(a)
library("readxl")
library("SNPassoc")
library(dplyr)
library("data.table")
data_path <- "./data/data_Ali.xlsx"
p_vals <- "./data/R_stat_p.csv"
conf_file_path <- './data/confidence.txt'
setwd("~/projects/manhattan_pca/code")
# xls files
my_data <- read_excel(data_path)
# renv.packages('IRkernel')
# renv::install("IRkernel")
# renv::activate()
# my_data
data(my_data, package = "SNPassoc")
# str(my_data, list.len=9)
idx <- grep("^rs", colnames(my_data))
my_data.s <- setupSNP(data=my_data, colSNPs=idx, sep="")
# d <- summary(my_data.s, print=FALSE)
# write.csv(d, "./data/R_stat.csv", row.names=TRUE)
# # plotMissing(my_data.s, print.labels.SNPs = FALSE)
# hwe <- tableHWE(my_data.s)
# # hwe
# hwe2 <- tableHWE(my_data.s, Status)
# # hwe2
# write.csv(hwe2, "./data/hwe.csv", row.names=TRUE)
# snpNHWE <- hwe2[,1]>0.05 & hwe2[,2]<0.05
# rownames(hwe2)[snpNHWE]
# hwe2[snpNHWE,]
# snps.ok <- rownames(hwe2)[hwe2[,1]>=0.01]
# pos <- which(colnames(my_data)%in%snps.ok, useNames = FALSE)
# my_data.s <- setupSNP(my_data, pos, sep="")
# association(Status ~ rs225131, data = my_data.s)
ans1 <- WGassociation(Status, data=my_data.s[, c(1:500)])
ans2 <- WGassociation(Status, data=my_data.s[, c(2, 501:ncol(my_data))])
ans <- rbind(as.data.frame(ans1), as.data.frame(ans2))
ans <- ans[!is.na(ans$codominant),]
# print(dim(ans))
# plot(ans)
write.csv(ans, p_vals, row.names=TRUE)
ans <- ans[order(ans$codominant), ]
# print(dim(ans))
# plot(ans)
write.csv(ans, p_vals, row.names=TRUE)
ans <- ans[ans$codominant < 0.05, ]
rows = rownames(ans)
snp_list <- rowsans
snp_list <- rows
results <- list()  # Initialize a list to store results for each SNP
for (snp in snp_list) {
formula <- as.formula(paste("Status ~", snp))
result <- association(formula, data = my_data.s)
results[[snp]] <- result
}
# Capture the printed output
output <- capture.output(print(results))
# Write the captured output to a text file
writeLines(output, con = conf_file_path)
